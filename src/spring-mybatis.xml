<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
     
     
     <!-- 支持注解注入 -->
     <context:annotation-config/>
     <!-- 加载属性文件 -->
     <context:property-placeholder location="classpath:jdbc.properties"/>
     <!-- 扫描服务并自动注入到Spring beans中 -->
     <context:component-scan base-package="com.jandar" />
     <!-- 配置数据源 -->
     <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
     	<property name="driverClassName" value="${mysql.jdbc.driverClassName}" />
		<property name="url" value="${mysql.jdbc.url}" />
		<property name="username" value="${mysql.jdbc.username}" />
		<property name="password" value="${mysql.jdbc.password}" />
		
		<!-- 连接池最大连接数 -->
		<property name="maxTotal" value="5" />
		<!-- 连接池启动时，初始化创建连接的个数 -->
		<property name="initialSize" value="1" />
		<!-- 最大等待时间 -->
		<property name="maxWaitMillis" value="60000" />
		<!-- 连接池最大，最小空闲 -->
		<property name="maxIdle" value="5" />
		<property name="minIdle" value="1" />
		<!-- 具体属性去百度dbcp2 -->
		<property name="removeAbandonedOnBorrow" value="true" />
		<property name="removeAbandonedOnMaintenance" value="true" />
		<property name="removeAbandonedTimeout" value="120" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
     </bean>
     <!-- 配置事务(和数据库打交道) -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 支持事务注解 -->
	<tx:annotation-driven proxy-target-class="true"/>
	
	
	     
     <!-- 配置mybatis的sqlSessionFactory -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
     	<property name="dataSource" ref="dataSource" />
     	<property name="mapperLocations">  
            <list>  
                <value>classpath:com/jandar/mapper/*Mapper.xml</value>  
            </list>  
        </property> 
     </bean>
     
     <!-- 扫描包内所有的mapper.xml，并将其对应的dao可以自动注入Spring beans中 -->
     <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ssm" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean> -->
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jandar.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	 <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>  
</beans>